import cv2
import numpy as np

cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)

height = int(cap.get(4))
width = int(cap.get(3))

cascade = cv2.CascadeClassifier('eyes.xml')

gray3_img = np.zeros((height, width, 3), dtype='uint8')

while True:
    success, color_img = cap.read()
    gray_img = cv2.cvtColor(color_img, cv2.COLOR_BGR2GRAY)  
    eyes = cascade.detectMultiScale(gray_img, scaleFactor=1.15, minNeighbors=20)
    x_min, y_min = width, height
    x_max, y_max = 0, 0 
    for (x1, y1, w, h) in eyes:
        x2 = x1 + w
        y2 = y1 + h
        if x1 < x_min:
            x_min = x1
        if y1 < y_min:
            y_min = y1
        if x2 > x_max:
            x_max = x2
        if y2 > y_max:
            y_max = y2

    delta_x = x_max - x_min
    delta_y = y_max - y_min

    x_min = x_min - round(0.1 * delta_x)
    y_min = y_min - round(0.1 * delta_y)
    x_max = x_max + round(0.1 * delta_x)
    y_max = y_max + round(0.1 * delta_y)

    for i in range(3):
        gray3_img[:, :, i] = gray_img
  
    try:
        color_img[y_min:y_max, x_min:x_max] = cv2.GaussianBlur(gray3_img[y_min:y_max, x_min:x_max], (111, 11), 0)
    except Exception:
        pass

    cv2.imshow('Blured eyes', color_img) 

    key = cv2.waitKey(1)
    if key == ord('q'):
        break
